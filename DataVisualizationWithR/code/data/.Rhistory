axis(1)
axis(2)
seq(47, 55, by=.1)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/max(dat$UN_2020_E)+47.5)
}
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/max(dat$UN_2020_E)+i+.05)
}
library(maps)
map(xlim=c(5.924, 14.988), ylim=c(47.37 , 55.02))
axis(1)
axis(2)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/max(dat$UN_2020_E)+i+.05)
}
max(dat$UN_2020_E)
3344906/2
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/1672453+i+.05)
map(xlim=c(5.924, 14.988), ylim=c(47.37 , 55.02))
axis(1)
axis(2)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/1672453+i+.05)
}
map(xlim=c(5.924, 14.988), ylim=c(47.37 , 55.02))
axis(1)
axis(2)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/872453+i+.05)
}
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/1e10+i+.05)
map(xlim=c(5.924, 14.988), ylim=c(47.37 , 55.02))
axis(1)
axis(2)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/1e10+i+.05)
}
1e10
map(xlim=c(5.924, 14.988), ylim=c(47.37 , 55.02))
axis(1)
axis(2)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/1e1000+i+.05)
}
library(maps)
map(xlim=c(5.924, 14.988), ylim=c(47.37 , 55.02))
axis(1)
axis(2)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/1000000+i+.05)
}
map(xlim=c(5.924, 14.988), ylim=c(47.37 , 56.02))
axis(1)
axis(2)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/1000000+i+.05)
}
map(xlim=c(5.924, 14.988), ylim=c(47.37 , 56.02), col="lightgrey")
axis(1)
axis(2)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/1000000+i+.05)
}
plot(0,0, pch="", xlim=c(5.924, 14.988), ylim=c(47.37 , 56.02), axes=F, ann=F)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/1000000+i+.05)
}
plot(0,0, pch="", xlim=c(5.924, 14.988), ylim=c(47.37 , 56.02), axes=F, ann=F)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/1000000+i+.05, col=c(0,0,0,.8))
}
plot(0,0, pch="", xlim=c(5.924, 14.988), ylim=c(47.37 , 56.02), axes=F, ann=F)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/1000000+i+.05, col=c(0,0,0,.8))
}
plot(0,0, pch="", xlim=c(5.924, 14.988), ylim=c(47.37 , 56.02), axes=F, ann=F)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/1000000+i+.05, col=rgb(0,0,0,.8))
}
plot(0,0, pch="", xlim=c(5.924, 14.988), ylim=c(47.37 , 56.02), axes=F, ann=F)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/800000+i+.05, col=rgb(0,0,0,.8))
}
plot(0,0, pch="", xlim=c(5.924, 14.988), ylim=c(47.37 , 56.02), axes=F, ann=F)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/500000+i+.05, col=rgb(0,0,0,.8))
}
plot(0,0, pch="", xlim=c(5.924, 14.988), ylim=c(47.37 , 58.02), axes=F, ann=F)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/500000+i+.05, col=rgb(0,0,0,.8))
}
plot(0,0, pch="", xlim=c(5.924, 14.988), ylim=c(47.37 , 60), axes=F, ann=F)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/500000+i+.05, col=rgb(0,0,0,.8))
}
plot(0,0, pch="", xlim=c(5.924, 14.988), ylim=c(47.37 , 60), axes=F, ann=F)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/500000+i+.05, col=rgb(0,0,0,.5))
}
par(bg="black")
plot(0,0, pch="", xlim=c(5.924, 14.988), ylim=c(47.37 , 60), axes=F, ann=F)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/500000+i+.05, col=rgb(1,1,1,.5))
}
plot(0,0, pch="", xlim=c(5.924, 14.988), ylim=c(47.37 , 60), axes=F, ann=F)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(density(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/500000+i+.05), col=rgb(1,1,1,.5))
}
par(bg="black")
plot(0,0, pch="", xlim=c(5.924, 14.988), ylim=c(47.37 , 60), axes=F, ann=F)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(density(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]), col=rgb(1,1,1,.5))
}
par(bg="black")
plot(0,0, pch="", xlim=c(5.924, 14.988), ylim=c(47.37 , 60), axes=F, ann=F)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(density(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1]), col=rgb(1,1,1,.5))
}
density(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
plot(0,0, pch="", xlim=c(5.924, 14.988), ylim=c(47.37 , 60), axes=F, ann=F)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(density(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1], bw=1), col=rgb(1,1,1,.5))
}
plot(0,0, pch="", xlim=c(5.924, 14.988), ylim=c(47.37 , 60), axes=F, ann=F)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(density(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1], bw=.5), col=rgb(1,1,1,.5))
}
par(bg="black")
plot(0,0, pch="", xlim=c(5.924, 14.988), ylim=c(47.37 , 60), axes=F, ann=F)
for(i in seq(47, 55, by=.2)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(density(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1], bw=.5), col=rgb(1,1,1,.5))
}
par(bg="black")
plot(0,0, pch="", xlim=c(5.924, 14.988), ylim=c(47.37 , 60), axes=F, ann=F)
for(i in seq(47, 55, by=.5)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(density(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1], bw=.5), col=rgb(1,1,1,.5))
}
par(bg="black")
plot(0,0, pch="", xlim=c(5.924, 14.988), ylim=c(47.37 , 60), axes=F, ann=F)
for(i in seq(47, 55, by=.5)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.5])
lines(density(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.5], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1], bw=.5), col=rgb(1,1,1,.5))
}
par(bg="white")
library(maps)
maps()
map()
par(oma=(1,1,1,1))
map()
map(xlim=c(5.924, 14.988), ylim=c(47.37 , 56.02), col="lightgrey")
axis(1)
axis(2)
par(oma=c(0,0,0,0))
map(xlim=c(5.924, 14.988), ylim=c(47.37 , 56.02), col="lightgrey")
axis(1)
axis(2)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/1000000+i+.05)
}
min(dat$INSIDE_Y)
map(xlim=c(5.924, 14.988), ylim=c(47.37 , 56.02), col="lightgrey")
axis(1)
axis(2)
max(dat$INSIDE_Y)
map(xlim=c(5.924, 14.988), ylim=c(47.37 , 55.02), col="lightgrey")
axis(1)
axis(2)
par(mar=c(3,3,3,3))
map(xlim=c(5.924, 14.988), ylim=c(47.37 , 55.02), col="lightgrey")
axis(1)
axis(2)
par(mar=c(3,3,3,1))
map(xlim=c(5.924, 14.988), ylim=c(47.37 , 55.02), col="lightgrey")
axis(1)
axis(2)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]+i+.05)
}
map(xlim=c(5.924, 14.988), ylim=c(47.37 , 55.02), col="lightgrey")
axis(1)
axis(2)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/1000000+i+.05)
}
map(xlim=c(5.924, 14.988), ylim=c(47.37 , 55.02), col="lightgrey")
axis(1)
axis(2)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/500000+i+.05)
}
map(xlim=c(5.924, 14.988), ylim=c(47.37 , 55.02), col="lightgrey")
axis(1)
axis(2)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/3000000+i+.05)
}
par(bg="black")
plot(0,0, pch="", xlim=c(5.924, 14.988), ylim=c(47.37 , 60), axes=F, ann=F)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/500000+i+.05, col=rgb(1,1,1,.5))
}
library(tabplot)
install.packages("tabplot")
url <- "https://cran.r-project.org/src/contrib/Archive/tabplot/tabplot_1.3.tar.gz"
pkgFile <- "tabplot_1.3.tar.gz"
download.file(url = url, destfile = pkgFile)
# Install package
install.packages(pkgs=pkgFile, type="source", repos=NULL)
install.packages(c("bit", "ff", "ffbase"))
# Install package
install.packages(pkgs=pkgFile, type="source", repos=NULL)
library(tabplot)
importFrom(bit, clone)   # the bit package has an exported version
importFrom(ff, is.factor)
install.packages("ff_2.2-14.2")
install.packages("ff")
install.packages(pkgs=pkgFile, type="source", repos=NULL)
install_github("mtennekes/tabplot")
library(devtools)
install.packages("devtools")
install.packages("devtools")
?install_github()
install_github("mtennekes/tabplot")
library(devtools)
install_github("mtennekes/tabplot")
library(tabplot)
library(plotrix)
install.packages("plotrix")
library(plotrix)
data <- read.dta("Elites/elites_data.dta", convert.factors=T)
library(foreign)
data <- read.dta("Elites/elites_data.dta", convert.factors=T)
data <- read.dta("~/Dropbox/Elites/elites_data.dta", convert.factors=T)
data$female <- ifelse(data$E1=="2. weiblich", 1, 0)  # Gender
data$women <- data$C1_5
par(bg=rgb(54, 57, 74, 255, max=255), fg="white", xaxs="r", yaxs="i", mgp=c(2.8,0.3,00), col.lab="white", col.axis="white", col.main="white", font.main=1, cex.main=0.8, cex.axis=0.8, cex.lab=0.8, family="Helvetica Light", tck=0, las=1)
par(mar=c(2,2,2,2))
my.colors <- c("orange"," maroon3", "darkolivegreen2", "lightskyblue2", "yellow2")
pie(table(data$women), col=my.colors, border=F, main="Silly Donut Chart", cex.main=2)
points(0,0, col=rgb(54, 57, 74, 255, max=255), cex=18, pch=19)
#################################################################################################
# Symbolbarplot
my.tab <- table(data$female, data$women)
symbolbarplot(my.tab, col=c("maroon3", "darkolivegreen2"), beside=T, symbbox=F, main="Symbol Bar Chart", cex.main=2)
#################################################################################################
# Unit Chart
par(family="Symbol Signs Basis set", mfrow=c(1,1), mar=c(1,1,1,1), oma=c(1,1,1,1), mfrow=c(1,2))
perc1 <- 24
perc2 <- 68
s.row <- sort(rep(seq(.1, 1, by=.1), 10), decreasing=T)
s.col <- rep(seq(.1, 1, by=.1), 10)
s.mat <- cbind(s.row, s.col)
plot(s.mat[1:100,1], s.mat[1:100,2], pch="M", col=brewer.pal(5, "Blues")[1], cex=2.5, xlim=c(0,1), ylim=c(0,1), axes=F, ann=F)
points(s.mat[1:perc1, 2], s.mat[(101-perc1):100, 1], pch="M", col=brewer.pal(5, "Blues")[3], cex=2.5)
mtext(side=1, line=3, paste(perc1, "%", sep=""), col=brewer.pal(5, "Blues")[3], cex=7, family="Helvetica Light")
mtext(side=3, line=3, "Unit Chart", col="white", cex=2, family="Helvetica Light", adj=0)
plot(s.mat[1:100,1], s.mat[1:100,2], pch="F", col=brewer.pal(5, "PuRd")[1], cex=2.5, xlim=c(0,1), ylim=c(0,1), axes=F, ann=F)
points(s.mat[1:perc2, 2], s.mat[(101-perc2):100, 1], pch="F", col=brewer.pal(5, "PuRd")[3], cex=2.5)
mtext(side=1, line=3, paste(perc2, "%", sep=""), col=brewer.pal(5, "PuRd")[3], cex=7, family="Helvetica Light")
data <- readRDS("new_FH_data.rds")
for(i in 2:25){
data[,i] <- as.character(data[,i])
data[,i] <- as.numeric(data[,i])
}
data <- data[sample(1:197, 20),2:13]
par(las=1, tck=-.005, mar=c(2,2,2,2), oma=c(0,1,0,1), family="Helvetica Light", mfrow=c(1,2))
stackpoly(as.matrix(data), stack=T, xlab="Country", ann=F)
mtext(side=3, line=3, "Stacked Line Chart", cex=2, adj=0)
stackpoly(t(as.matrix(data)), stack=T,  xlab="", ylab="", main="")
par(bg="white")
par(bg="white", fg="black")
dat
tableplot(dat)
tableplot(dat[,1:5])
tableplot(dat[,4:8])
tableplot(dat[,4:12])
par(bg="black")
plot(0,0, pch="", xlim=c(5.924, 14.988), ylim=c(47.37 , 60), axes=F, ann=F)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/500000+i+.05, col=rgb(1,1,1,.5))
}
par(bg="black")
plot(0,0, pch="", xlim=c(5.924, 14.988), ylim=c(47.37 , 60), axes=F, ann=F)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/500000+i+.05, col=rgb(1,1,1,.5))
polygon(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/500000+i+.05, col=rgb(1,1,1,.5))
}
i <- 50
plot(0,0, pch="", xlim=c(5.924, 14.988), ylim=c(47.37 , 60), axes=F, ann=F)
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/500000+i+.05, col=rgb(1,1,1,.5))
polygon(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/500000+i+.05, col=rgb(1,1,1,.5))
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/500000+i+.05, col=rgb(1,1,1,.5))
polygon(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/500000+i+.05, col="black")
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/500000+i+.05, col=rgb(1,1,1,.5))
polygon(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/500000+i+.05, col="black")
polygon(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/500000+i+.05, col="red")
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/500000+i+.05, col=rgb(1,1,1,.5))
par(bg="black")
plot(0,0, pch="", xlim=c(5.924, 14.988), ylim=c(47.37 , 60), axes=F, ann=F)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
polygon(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/500000+i+.05, col="red")
lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/500000+i+.05, col=rgb(1,1,1,.5))
}
?polygon
par(bg="black")
plot(0,0, pch="", xlim=c(5.924, 14.988), ylim=c(47.37 , 60), axes=F, ann=F)
for(i in seq(47, 55, by=.1)){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
polygon(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/500000+i+.05, col="black", border="white")
#lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/500000+i+.05, col=rgb(1,1,1,.5))
}
par(bg="black")
plot(0,0, pch="", xlim=c(5.924, 14.988), ylim=c(47.37 , 60), axes=F, ann=F)
for(i in rev(seq(47, 55, by=.1))){
ord <- order(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1])
polygon(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/500000+i+.05, col="black", border="white")
#lines(dat$INSIDE_X[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord], dat$UN_2020_E[dat$INSIDE_Y>i & dat$INSIDE_Y<=i+.1][ord]/500000+i+.05, col=rgb(1,1,1,.5))
}
dev.off()
setwd("/Users/richardtraunmuller/Dropbox/Teaching/Essex 2017/Data")
# Getting Data into R
library(foreign)
data <- read.csv("gapminder.csv", sep=";")
# Look at Data Set
head(data)
# Look at Single Variables
class(data$lifeExp)
class(data$continent)
summary(data$lifeExp)
summary(data$continent)
table(data$continent)
prop.table(table(data$continent))
table(data$continent)
prop.table(table(data$continent))
table(data$continent)
prop.table(table(data$continent))
# The Plot Function
afg <- data[data$country=="Afghanistan",]
plot(afg$lifeExp)
plot(afg$lifeExp, type="p")
plot(afg$lifeExp, type="l")
plot(afg$lifeExp, type="b")
plot(afg$lifeExp, type="o")
plot(afg$lifeExp, type="h")
plot(afg$lifeExp, type="s")
plot(afg$lifeExp, type="n")
plot(data$continent)
summary(data$continent)
# Look at Data Set
head(data)
table(data$continent)
prop.table(table(data$continent))
plot(data$continent)
# Other High Level Functions
my.tab <- prop.table(table(data$continent))
barplot(my.tab)
plot(data$continent)
my.tab <- sort(my.tab, decreasing=T)
barplot(my.tab)
pie(my.tab)
dotchart(my.tab)
hist(data$lifeExp)
hist(data$lifeExp, breaks=100)
hist(data$lifeExp, breaks=50)
hist(data$lifeExp, breaks=5)
?hist
boxplot(data$lifeExp)
boxplot(data$lifeExp ~ data$continent)
data$gdpPercap <- data$gdpPercap/10000
plot(data$gdpPercap, data$lifeExp)
plot(data$continent, data$lifeExp)
data$rich <- ifelse(data$gdpPerc > median(data$gdpPercap), "rich", "poor")
data$rich <- as.factor(data$rich)
plot(data$rich)
class(data$rich)
class(data$continent)
##############################################################################################
# Basic Graphs
###############################################################################################
# Set Working Directory
setwd("/Users/richardtraunmuller/Dropbox/IPSDS/Hertie Summer School 2021/")
##############################################################################################
# Basic Graphs
###############################################################################################
# Set Working Directory
setwd("~/Dropbox/IPSDS/Hertie Summer School 2021/")
##############################################################################################
# Basic Graphs
###############################################################################################
# Set Working Directory
setwd("~/Dropbox/IPSDS/")
##############################################################################################
# Basic Graphs
###############################################################################################
# Set Working Directory
setwd("~/Dropbox/The Visual Citizen/IPSDS/Hertie Summer School 2021/")
##############################################################################################
# Basic Graphs
###############################################################################################
# Set Working Directory
setwd("~/Dropbox/The Visual Citizen/IPSDS/Hertie Summer School 2021/data/")
# Getting Data into R
library(foreign)
data <- read.csv("gapminder.csv", sep=";")
class(data$continent)
# Look at Single Variables
class(data$lifeExp)
data <- read.csv("gapminder.csv", sep=";")
data
data <- read.csv("gapminder.csv", sep=",")
# Look at Data Set
head(data)
# Look at Single Variables
class(data$lifeExp)
class(data$continent)
# Getting Data into R
library(foreign)
data <- read.csv("gapminder.csv", sep=",")
class(data$continent)
data <- read.csv("/Users/richardtraunmuller/Dropbox/SwissData/data/02-t_pers_rs_harm_year2010/t_pers_rs_harm.csv")
data <- data[, c(7, 6, 9, 33, 36, 57)]
data$NATIONALITYCAT_HARM <- ifelse(data$NATIONALITYCAT_HARM==-9, NA, data$NATIONALITYCAT_HARM)
data$RELIGIOUSCOMMAGGII_HARM <- ifelse(data$RELIGIOUSCOMMAGGII_HARM==-9, NA, data$RELIGIOUSCOMMAGGII_HARM)
data$CURRACTIVITYSTATUSIII_HARM <- ifelse(data$CURRACTIVITYSTATUSIII_HARM==-9, NA, data$CURRACTIVITYSTATUSIII_HARM)
#data$SEX_HARM <- as.factor(data$SEX_HARM)
#data$NATIONALITYCAT_HARM <- as.factor(data$NATIONALITYCAT_HARM)
#data$RELIGIOUSCOMMAGGII_HARM <- as.factor(data$RELIGIOUSCOMMAGGII_HARM)
data$RES_CANTON_HARM <- as.factor(data$RES_CANTON_HARM)
data$SEX_HARM <- ifelse(data$SEX_HARM==1, "Male", "Female")
data$NATIONALITYCAT_HARM <- ifelse(data$NATIONALITYCAT_HARM==1, "Swiss", "Other")
data$RELIGIOUSCOMMAGGII_HARM <- ifelse(data$RELIGIOUSCOMMAGGII_HARM==1, "Catholic", data$RELIGIOUSCOMMAGGII_HARM)
data$RELIGIOUSCOMMAGGII_HARM <- ifelse(data$RELIGIOUSCOMMAGGII_HARM==2, "Reformed", data$RELIGIOUSCOMMAGGII_HARM)
data$RELIGIOUSCOMMAGGII_HARM <- ifelse(data$RELIGIOUSCOMMAGGII_HARM==3, "Other Christian", data$RELIGIOUSCOMMAGGII_HARM)
data$RELIGIOUSCOMMAGGII_HARM <- ifelse(data$RELIGIOUSCOMMAGGII_HARM==4, "Jewish", data$RELIGIOUSCOMMAGGII_HARM)
data$RELIGIOUSCOMMAGGII_HARM <- ifelse(data$RELIGIOUSCOMMAGGII_HARM==5, "Muslim", data$RELIGIOUSCOMMAGGII_HARM)
data$RELIGIOUSCOMMAGGII_HARM <- ifelse(data$RELIGIOUSCOMMAGGII_HARM==6, "Other", data$RELIGIOUSCOMMAGGII_HARM)
data$RELIGIOUSCOMMAGGII_HARM <- ifelse(data$RELIGIOUSCOMMAGGII_HARM==7, "None", data$RELIGIOUSCOMMAGGII_HARM)
data$CURRACTIVITYSTATUSIII_HARM <- ifelse(data$CURRACTIVITYSTATUSIII_HARM==1, "Full Time", data$CURRACTIVITYSTATUSIII_HARM)
data$CURRACTIVITYSTATUSIII_HARM <- ifelse(data$CURRACTIVITYSTATUSIII_HARM==2, "Part Time", data$CURRACTIVITYSTATUSIII_HARM)
data$CURRACTIVITYSTATUSIII_HARM <- ifelse(data$CURRACTIVITYSTATUSIII_HARM==3, "Part Time", data$CURRACTIVITYSTATUSIII_HARM)
data$CURRACTIVITYSTATUSIII_HARM <- ifelse(data$CURRACTIVITYSTATUSIII_HARM==4, "Part Time", data$CURRACTIVITYSTATUSIII_HARM)
data$CURRACTIVITYSTATUSIII_HARM <- ifelse(data$CURRACTIVITYSTATUSIII_HARM==5, "Unemployed", data$CURRACTIVITYSTATUSIII_HARM)
data$CURRACTIVITYSTATUSIII_HARM <- ifelse(data$CURRACTIVITYSTATUSIII_HARM==6, "In Education", data$CURRACTIVITYSTATUSIII_HARM)
data$CURRACTIVITYSTATUSIII_HARM <- ifelse(data$CURRACTIVITYSTATUSIII_HARM==7, "Home Work", data$CURRACTIVITYSTATUSIII_HARM)
data$CURRACTIVITYSTATUSIII_HARM <- ifelse(data$CURRACTIVITYSTATUSIII_HARM==8, "Retired", data$CURRACTIVITYSTATUSIII_HARM)
data$CURRACTIVITYSTATUSIII_HARM <- ifelse(data$CURRACTIVITYSTATUSIII_HARM==9, "Other", data$CURRACTIVITYSTATUSIII_HARM)
write.csv(data, "swiss_census.csv")
data <- read.csv("swiss_census.csv", sep=",")
head(data)
tableplot(data)
?read.csv
tableplot(data, sortCol=AGE_HARM)
tableplot(data, sortCol=RELIGIOUSCOMMAGGII_HARM, from=0, to=100, nBins=100)
tableplot(data, sortCol=RELIGIOUSCOMMAGGII_HARM, from=0, to=100, nBins=10)
tableplot(data, sortCol=RELIGIOUSCOMMAGGII_HARM, from=0, to=100, nBins=300)
tableplot(data, sortCol=RELIGIOUSCOMMAGGII_HARM, from=54, to=62, nBins=300)
tableplot(data, sortCol=CURRACTIVITYSTATUSIII_HARM, subset=RELIGIOUSCOMMAGGII_HARM=="Jewish", nBins=300)
library(effects)
install.packages("effects")
library(effects)
library(arm)
par(family="Gill Sans MT", lwd=.5, bty="l", mgp=c(1.5, .5, 0), mar=c(3,3,2,1), las=1, tck=-.02, cex.axis=.8, cex.lab=.8)
data(Arrests) # Load Data
data <- Arrests
# Recode variables
data$released <- ifelse(data$released=="Yes", 1, 0) # Recode outcome variable
data$black <- ifelse(data$colour=="Black", 1, 0) #
data$age.10 <- data$age/10
m <- glm(released ~  checks, data=data, family=binomial(link = "logit"))
display(m, digits=3)
?display
rm(list=ls())
?display
?display
